/*------------------------------------*\
    #ANIMATION TRANSITION
\*------------------------------------*/

// A set of classes to make elemets appears.
// Transition duration can be set width the $t variable.
// All options have a default value and an 'started' state triggered with a 'u-starts' class on a parent element.
//
// The order of these events to happen is given by the delay utility classes from 0.5s to 3 through half second.
//
// E.g.
//      <div class='u-starts'>
//  (1)   <div class='say-hello'></div>
//  (2)   <div class='say-hello u-delay-1'></div>
//  (3)   <div class='say-bye u-delay-5'></div>
//      </div>
//
// 1 -This element is transprent and becomes opaque inmediatly when 'u-starts' class is set.
// 2 -This element is transprent and becomes opaque 0.5 seconds after 'u-starts' class is set.
// 3 -This element is opaque and becomes transparent 3 seconds after 'u-starts' class is set.



$t: 1s !default;


@keyframes fade-move-down {
  0%   { transform:translate(-10px, -1px); opacity: 0; }
  50%  { opacity: 1; }
  100% { transform:translate(10px, -1px); opacity: 0; }
}

@include media-query(large) {
  .say-bye,
  .say-hello {
    transition-property: opacity;
    transition-duration: $t;
    transition-timing-function: ease;
    @for $delay from 1 to 7 {
      &.u-delay-#{$delay} {
        transition-delay: #{$delay / 2}s;
      }
    }
  }


  .say-bye {
    opacity: 1;
    .u-starts & {
      opacity: 0;
    }
  }

  .say-hello {
    opacity: 0;
    .u-starts & {
      opacity: 1;
    }
  }
}

